version: "3.8" 
services:


  orion:
    image: fiware/orion:3.7.0
    hostname: orion 
    container_name: fiware-orion 
    depends_on:
      - mongo-db 
    networks:
      - default
    ports:
      - "1026:1026" 
    command: -dbhost mongo-db -logLevel DEBUG -noCache
    healthcheck: 
      test: curl --fail -s http://orion:1026/version || exit 1
      interval: 10s

 
  mongo-db:
    image: mongo:4.4 
    hostname: mongo-db 
    container_name: db-mongo 
    expose:
      - "27017" 
    ports:
      - "27017:27017" 
    networks:
      - default 
    volumes: 
      - mongo-db:/data
    healthcheck: 
      test: |
        host=`hostname --ip-address || echo '127.0.0.1'`; 
        mongo --quiet $host/test --eval 'quit(db.runCommand({ ping: 1 }).ok ? 0 : 2)' && echo 0 || echo 1
      interval: 5s

  iot-agent-ul:
    image: fiware/iotagent-ul
    hostname: iot-agent-ul
    container_name: fiware-iot-agent-ul
    depends_on:
      - mongo-db
      - mosquitto
    networks:
      - default
    expose:
      - "4042"
    ports:
      - "4042:4042" 
    environment:
      - IOTA_CB_HOST=orion 
      - IOTA_CB_PORT=1026 
      - IOTA_NORTH_PORT=4042
      - IOTA_REGISTRY_TYPE=mongodb 
      - IOTA_LOG_LEVEL=DEBUG 
      - IOTA_TIMESTAMP=true 
      - IOTA_CB_NGSI_VERSION=v2 
      - IOTA_AUTOCAST=true 
      - IOTA_MONGO_HOST=mongo-db 
      - IOTA_MONGO_PORT=27017 
      - IOTA_MONGO_DB=iotagentul 
      - IOTA_MQTT_HOST=mosquitto 
      - IOTA_MQTT_PORT=1883 
      - IOTA_DEFAULT_RESOURCE= 
      - IOTA_PROVIDER_URL=http://iot-agent-ul:4042
      - IOTA_DEFAULT_TRANSPORT=MQTT
    healthcheck:
      interval: 5s

  mosquitto:
    image: eclipse-mosquitto:1.6.14
    hostname: mosquitto
    container_name: mosquitto
    expose:
      - "1883"
      - "9001"
    ports:
      - "1883:1883"
      - "9001:9001"
    networks:
      - default

  dummy-device: 
    build: ./dummy-device 
    hostname: dummy-device
    container_name: dummy-device
    depends_on:
      - orion
      - mosquitto
    volumes:
      - ./dummy-device:/code
    expose: 
      - "80"
    ports: 
      - "80:80"
    networks: 
      - default

  cygnus:
    image: fiware/cygnus-ngsi:2.16.0
    hostname: cygnus
    container_name: fiware-cygnus
    networks:
      - default
    depends_on:
      - mysql-db
    expose:
      - "5050"
      - "5080"
    ports:
      - "5050:5050" 
      - "5080:5080" 
    environment:
      - "CYGNUS_MYSQL_SERVICE_PORT=5050" 
      - "CYGNUS_MYSQL_HOST=mysql-db" 
      - "CYGNUS_MYSQL_PORT=3306" 
      - "CYGNUS_MYSQL_USER=root" 
      - "CYGNUS_MYSQL_PASS=123" 
      - "CYGNUS_SERVICE_PORT=5050"
      - "CYGNUS_API_PORT=5080" 
      - "CYGNUS_LOG_LEVEL=DEBUG" 
    healthcheck:
      test: curl --fail -s http://localhost:5080/v1/version || exit 1

  mysql-db:
    restart: always
    image: mysql:5.7
    hostname: mysql-db
    container_name: db-mysql
    expose:
      - "3306"
    ports:
      - "3306:3306"
    networks:
      - default
    environment:
      - "MYSQL_ROOT_PASSWORD=123"
      - "MYSQL_ROOT_HOST=%"
    volumes:
      - mysql-db:/var/lib/mysql

  grafana:
    image: grafana/grafana
    hostname: grafana
    container_name: grafana
    depends_on:
        - mysql-db
    ports:
        - "3000:3000"

networks:
  default:
  
volumes: 
  mongo-db: ~
  mysql-db: ~